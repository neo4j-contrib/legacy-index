Neo4j indexing

	This is a collection of various utilities for indexing parts of a neo4j
	graph. The most straight-forward way to use this component is via
	the {{{http://components.neo4j.org/index/apidocs/org/neo4j/index/IndexService.html}IndexService}} interface.
	It is basically a service where you can index neo4j nodes with key-value
	pairs. See more below.

	There's also other useful utilities, such as a {{{http://components.neo4j.org/index/apidocs/org/neo4j/index/timeline/Timeline.html}Timeline}}.

IndexService

	In the <<org.neo4j.index>> package you will find the <<IndexService>> 
	interface which holds the most straight-forward way of indexing your neo4j
	graph. Currently our main implementation is the
	{{{http://components.neo4j.org/index/apidocs/org/neo4j/index/lucene/LuceneIndexService.html}LuceneIndexService}}.
	Look at a quick example:

%{source-code|snippet=basicIndexing|file=src/test/java/examples/SiteExamples.java}

	<<LuceneIndexService>> uses {{{http://lucene.apache.org/java/}Lucene}} as
	backend. Read more at our {{{http://wiki.neo4j.org/content/Indexing_with_IndexService}wiki}}
	
Fulltext indexing

	Since we use Lucene as backend it's easy to use its fulltext indexing features.
	LuceneFulltextIndexService differs from LuceneIndexService in that it analyzes
	the values in the key-value pairs for each entry and stores those individual
	words in addition to the untouched value. This makes it possible to do queries
	for individual words. The querying is also case-insensitive.
	See {{{http://components.neo4j.org/index/apidocs/org/neo4j/index/lucene/LuceneFulltextIndexService.html}LuceneFulltextIndexService}}
	as well as {{{http://wiki.neo4j.org/content/Indexing_with_IndexService#Fulltext_indexing}wiki}}.
	
LuceneIndexBatchInserter

	The "batch inserter" version of {{{http://components.neo4j.org/index/apidocs/org/neo4j/index/lucene/LuceneIndexService.html}LuceneIndexService}}.
	It should be used with a BatchInserter and stores the indexes in the same
	format as the LuceneIndexService. There's also a fulltext version of this.
	See more at our {{{http://wiki.neo4j.org/content/Indexing_with_BatchInserter}wiki}}.

Timeline

	You can create a {{{http://components.neo4j.org/index/apidocs/org/neo4j/index/timeline/Timeline.html}timeline}} and add nodes to it,
	each with a timestamp and you can then ask it to return all nodes within a
	specific period of time	(with optional upper and lower bounds).
	
	Node that the name you give the timeline is more a convenience thing, much
	like the naming of a Thread in Java. It is also a security check so that
	you use the right timeline, since the name is checked upon instantiation
	so that it is the same as the name as you pass in (except the first time).

%{source-code|snippet=basicTimelineUsage|file=src/test/java/examples/SiteExamples.java}

	Although values from System.currentTimeMillis() is used in this example
	you can use any value system (of type long) for your timestamps.